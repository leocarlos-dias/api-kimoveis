{
    "openapi": "3.0.0",
    "info": {
        "title": "API Schedule",
        "description": "This is a rest api for schedule",
        "contact": {
            "email": "leocsdias@hotmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "hhtp://localhost:3333"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "summary": "Register user",
                "description": "This route will be responsible for registering the user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "admin": {
                                        "type": "boolean"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "Leonardo Carlos",
                                        "email": "leo@swagger.com",
                                        "admin": true,
                                        "password": "swagger"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "admin": {
                                            "type": "boolean"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "deletedAt": {
                                            "type": "null"
                                        }
                                    }
                                },
                                "examples": {
                                    "user": {
                                        "value": {
                                            "id": 1,
                                            "name": "Leonardo Carlos",
                                            "email": "leo@swagger.com",
                                            "admin": true,
                                            "createdAt": "2023-03-11 13:27:50",
                                            "updatedAt": "2023-03-11 13:27:50",
                                            "deletedAt": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Email": {
                                        "value": {
                                            "message": "Email already exists"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "name": [
                                                    "Required"
                                                ],
                                                "email": [
                                                    "Required"
                                                ],
                                                "password": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Expected keys": {
                                        "value": {
                                            "message": {
                                                "name": [
                                                    "Expected string, received number"
                                                ],
                                                "email": [
                                                    "Expected string, received number"
                                                ],
                                                "admin": [
                                                    "Expected boolean, received number"
                                                ],
                                                "password": [
                                                    "Expected string, received number"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Search users",
                "description": "This route will be responsible for fetching all registered users",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "admin": {
                                                "type": "boolean"
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            },
                                            "deletedAt": {
                                                "type": "null"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "user": {
                                        "value": [
                                            {
                                                "id": 1,
                                                "name": "Leonardo Carlos",
                                                "email": "leo@swagger.com",
                                                "admin": true,
                                                "createdAt": "2023-03-11 13:27:50",
                                                "updatedAt": "2023-03-11 13:27:50",
                                                "deletedAt": null
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "patch": {
                "summary": "Edit user",
                "description": "This route will be responsible for editing the user itself",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "Leonardo Dias",
                                        "email": "leo_dias@swagger.com",
                                        "password": "swagger_2"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "deletedAt": {
                                            "type": "null"
                                        }
                                    }
                                },
                                "examples": {
                                    "user": {
                                        "value": {
                                            "id": 1,
                                            "name": "Leonardo Carlos",
                                            "email": "leo@swagger.com",
                                            "admin": true,
                                            "createdAt": "2023-03-11 13:27:50",
                                            "updatedAt": "2023-03-11 13:27:50",
                                            "deletedAt": "null"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Email": {
                                        "value": {
                                            "message": "Email already exists"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User": {
                                        "value": {
                                            "message": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "description": "This route will be responsible for removing the user itself",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Not Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User": {
                                        "value": {
                                            "message": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Authenticate user",
                "description": "This route will be responsible for authenticating a user",
                "tags": [
                    "Sessions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "email": "leo@swagger.com",
                                        "password": "swagger"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "session": {
                                        "value": {
                                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "email": [
                                                    "Required"
                                                ],
                                                "password": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Email": {
                                        "value": {
                                            "email": [
                                                "Invalid email"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Invalid credentials"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "post": {
                "summary": "Register category",
                "description": "This route will be responsible for registering a category",
                "tags": [
                    "Categories"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "category": {
                                    "value": {
                                        "name": "Luxo"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "category": {
                                        "value": {
                                            "id": 1,
                                            "name": "Luxo"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Category": {
                                        "value": {
                                            "message": "Category already exists"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "name": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Expected keys": {
                                        "value": {
                                            "message": {
                                                "name": [
                                                    "Expected string, received number"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Search categories",
                "description": "This route will be responsible for fetching all categories",
                "tags": [
                    "Categories"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "category": {
                                        "value": [
                                            {
                                                "id": 1,
                                                "name": "Luxo"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/:id/realEstate": {
            "get": {
                "summary": "Search property by category",
                "description": "This route will be responsible for searching for a property by category",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "categoryID",
                        "in": "query",
                        "description": "Category ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "realEstate": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "sold": {
                                                        "type": "boolean"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    },
                                                    "size": {
                                                        "type": "number"
                                                    },
                                                    "createdAt": {
                                                        "type": "date"
                                                    },
                                                    "updatedAt": {
                                                        "type": "date"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "category": {
                                        "value": {
                                            "id": 1,
                                            "name": "Luxo",
                                            "realEstate": [
                                                {
                                                    "id": 2,
                                                    "sold": true,
                                                    "value": 200000.00,
                                                    "size": 200,
                                                    "createdAt": "2020-05-12T23:50:21.817Z",
                                                    "updatedAt": "2020-05-12T23:50:21.817Z"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "RealEstate": {
                                        "value": {
                                            "message": "RealEstate not found"
                                        }
                                    },
                                    "Category": {
                                        "value": {
                                            "message": "Category not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules": {
            "post": {
                "summary": "Create a schedule",
                "description": "This route will be responsible for registering a schedule",
                "tags": [
                    "Schedules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string"
                                    },
                                    "hour": {
                                        "type": "string"
                                    },
                                    "realEstateId": {
                                        "type": "number"
                                    }
                                }
                            },
                            "examples": {
                                "schedule": {
                                    "value": {
                                        "date": "2023-03-22",
                                        "hour": "14:00",
                                        "realEstateId": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "schedule": {
                                        "value": {
                                            "message": "Schedule created"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "date": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "hour": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "realEstateId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "date": [
                                                    "Required"
                                                ],
                                                "hour": [
                                                    "Required"
                                                ],
                                                "realEstateId": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Expected keys": {
                                        "value": {
                                            "message": {
                                                "date": [
                                                    "Expected string, received number"
                                                ],
                                                "hour": [
                                                    "Expected string, received number"
                                                ],
                                                "realEstateId": [
                                                    "Expected number, received string"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User": {
                                        "value": {
                                            "message": "User schedule to this real estate at this date and time already exists"
                                        }
                                    },
                                    "Schedule": {
                                        "value": {
                                            "message": "Schedule to this real estate at this date and time already exists"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User": {
                                        "value": {
                                            "message": "User not found"
                                        }
                                    },
                                    "RealEstate": {
                                        "value": {
                                            "message": "RealEstate not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules/RealEstate/:id": {
            "post": {
                "summary": "Search a schedule",
                "description": "This route will be responsible for fetching a schedule",
                "tags": [
                    "Schedules"
                ],
                "parameters": [
                    {
                        "name": "realEstateId",
                        "in": "query",
                        "description": "realEstate ID",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "sold": {
                                            "type": "boolean"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "size": {
                                            "type": "number"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "street": {
                                                    "type": "string"
                                                },
                                                "zipCode": {
                                                    "type": "string"
                                                },
                                                "number": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "category": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "number"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "schedules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "hour": {
                                                        "type": "string"
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "number"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "admin": {
                                                                "type": "boolean"
                                                            },
                                                            "password": {
                                                                "type": "string"
                                                            },
                                                            "createdAt": {
                                                                "type": "string"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string"
                                                            },
                                                            "deletedAt": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "realEstate": {
                                        "value": {
                                            "id": 1,
                                            "sold": false,
                                            "value": 100000.99,
                                            "size": 400,
                                            "createdAt": "2023-03-22 15:06:06",
                                            "updatedAt": "2023-03-22 15:06:06",
                                            "address": {
                                                "id": 1,
                                                "street": "street1",
                                                "zipCode": "zipCode",
                                                "number": "number",
                                                "city": "city",
                                                "state": "s0"
                                            },
                                            "category": {
                                                "id": 1,
                                                "name": "Categoria 1"
                                            },
                                            "schedules": [
                                                {
                                                    "id": 1,
                                                    "date": "01/03/2023",
                                                    "hour": "11:00",
                                                    "user": {
                                                        "id": 1,
                                                        "name": "Leonardo C",
                                                        "email": "leonardoCarlos@kenzie.com.br",
                                                        "admin": true,
                                                        "password": "$2a$05$4S5GD8LgkhLWflMJ2f.t4udfU6/KcyKPwhZ424kMQNqmc4bpdvxja",
                                                        "createdAt": "2023-03-22 15:04:17",
                                                        "updatedAt": "2023-03-22 15:04:17",
                                                        "deletedAt": null
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "date": [
                                                "string"
                                            ],
                                            "hour": [
                                                "string"
                                            ],
                                            "realEstateId": [
                                                "number"
                                            ]
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "date": [
                                                    "Required"
                                                ],
                                                "hour": [
                                                    "Required"
                                                ],
                                                "realEstateId": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Invalid hour": {
                                        "value": {
                                            "message": "Invalid hour, available times are 8AM to 18PM"
                                        }
                                    },
                                    "Invalid date": {
                                        "value": {
                                            "message": "Invalid date, work days are monday to friday"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": "string"
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": "string"
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "RealEstate": {
                                        "value": {
                                            "message": "RealEstate not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/realEstate": {
            "post": {
                "summary": "Create a Real Estate",
                "description": "This route will be responsible for registering a real estate",
                "tags": [
                    "Real Estate"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type": "number"
                                    },
                                    "size": {
                                        "type": "number"
                                    },
                                    "address": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "street": {
                                                    "type": "string"
                                                },
                                                "zipCode": {
                                                    "type": "string"
                                                },
                                                "number": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "categoryId": {
                                        "type": "number"
                                    }
                                }
                            },
                            "examples": {
                                "category": {
                                    "value": {
                                        "value": 100000.99,
                                        "size": 400,
                                        "address": {
                                            "street": "street",
                                            "zipCode": "zipCode",
                                            "number": "number",
                                            "city": "city",
                                            "state": "s0"
                                        },
                                        "categoryId": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "sold": {
                                            "type": "boolean"
                                        },
                                        "value": {
                                            "type": "number"
                                        },
                                        "size": {
                                            "type": "number"
                                        },
                                        "address": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "street": {
                                                        "type": "string"
                                                    },
                                                    "zipCode": {
                                                        "type": "string"
                                                    },
                                                    "number": {
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "realEstate": {
                                        "value": {
                                            "id": 1,
                                            "sold": false,
                                            "value": 100000.99,
                                            "size": 400,
                                            "address": {
                                                "id": 2,
                                                "street": "street",
                                                "zipCode": "zipCode",
                                                "number": "number",
                                                "city": "city",
                                                "state": "s0"
                                            },
                                            "category": {
                                                "id": 1,
                                                "name": "luxo"
                                            },
                                            "createdAt": "2023-03-22 20:47:03",
                                            "updatedAt": "2023-03-22 20:47:03"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "properties": {
                                                "size": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "categoryId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Required keys": {
                                        "value": {
                                            "message": {
                                                "value": [
                                                    "Invalid input"
                                                ],
                                                "size": [
                                                    "Required"
                                                ],
                                                "address": [
                                                    "Required"
                                                ],
                                                "categoryId": [
                                                    "Required"
                                                ]
                                            }
                                        }
                                    },
                                    "Invalid keys": {
                                        "value": {
                                            "message": {
                                                "size": [
                                                    "Expected number, received string"
                                                ],
                                                "address": [
                                                    "Expected string, received number",
                                                    "Expected string, received number",
                                                    "Expected string, received number",
                                                    "Expected string, received number",
                                                    "Expected string, received number"
                                                ],
                                                "categoryId": [
                                                    "Expected number, received string"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Missing bearer token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Token": {
                                        "value": {
                                            "message": "Insufficient permission"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Search a Real Estate",
                "description": "This route will be responsible for searching a real estate",
                "tags": [
                    "Real Estate"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number"
                                            },
                                            "sold": {
                                                "type": "boolean"
                                            },
                                            "value": {
                                                "type": "number"
                                            },
                                            "size": {
                                                "type": "number"
                                            },
                                            "address": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "street": {
                                                            "type": "string"
                                                        },
                                                        "zipCode": {
                                                            "type": "string"
                                                        },
                                                        "number": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "category": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updatedAt": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "realEstate": {
                                        "value": [
                                            {
                                                "id": 1,
                                                "sold": false,
                                                "value": 100000.99,
                                                "size": 400,
                                                "address": {
                                                    "id": 2,
                                                    "street": "street",
                                                    "zipCode": "zipCode",
                                                    "number": "number",
                                                    "city": "city",
                                                    "state": "s0"
                                                },
                                                "category": {
                                                    "id": 1,
                                                    "name": "luxo"
                                                },
                                                "createdAt": "2023-03-22 20:47:03",
                                                "updatedAt": "2023-03-22 20:47:03"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}